---
- name: Install dynamic configuration scripts
  copy:
    src: "../files/bin/{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: "{{ item.mode }}"
  loop:
    - { src: "setup-virt-drivers", dest: "/usr/local/bin/setup-virt-drivers", mode: "0755" }
    - { src: "setup-dns", dest: "/usr/local/bin/setup-dns", mode: "0755" }

- name: Configure streamlined cloud-init configuration
  copy:
    dest: /etc/cloud/cloud.cfg
    mode: 0644
    content: |
      # Focused datasource configuration for enterprise deployment
      datasource_list: [
        NoCloud, ConfigDrive, OpenStack, Azure, GCE, Ec2, VMware, 
        OVF, MAAS, CloudStack, Hetzner, Oracle, None
      ]

      # Preserve existing configurations
      preserve_sources_list: true

      # Network configuration using NetworkManager
      network:
        renderers: ['NetworkManager']
      
      # Let our script handle DNS
      manage_resolv_conf: false
      
      # Disk growth
      growpart:
        mode: auto
        devices: ['/dev/sda']
        ignore_growroot_disabled: false

      # NTP configuration
      ntp:
        enabled: true
        ntp_client: chrony
        config:
          confpath: /etc/chrony.d/pool.conf

      # Core initialization modules
      cloud_init_modules:
       - migrator
       - seed_random
       - bootcmd
       - write-files
       - growpart
       - resizefs
       - disk_setup
       - mounts
       - set_hostname
       - update_hostname
       - update_etc_hosts
       - users-groups
       - ssh

      # Configuration modules
      cloud_config_modules:
       - locale
       - ntp
       - timezone
       - runcmd

      # Final modules - minimal set for completion and debugging
      cloud_final_modules:
       - final-message
       - power-state-change

      system_info:
        distro: opensuse
        ssh_svcname: sshd
        default_user:
          name: admin
          lock_passwd: true
          gecos: Cloud User
          groups: [users, wheel, dialout, cdrom, audio, video, plugdev]
          sudo: ["ALL=(ALL) NOPASSWD:ALL"]
          shell: /bin/bash

      # Custom initialization
      bootcmd:
        - [/usr/local/bin/setup-virt-drivers]
      
      runcmd:
        - systemctl daemon-reload
        - sleep 2
        - /usr/local/bin/setup-dns
        - systemctl restart nftables-firewall || true
        - systemctl restart docker || true
        # Handle LVM growth after partition expansion
        - pvresize /dev/sda2 || true
        - lvextend -l +100%FREE /dev/system/root || true
        - xfs_growfs / || true
