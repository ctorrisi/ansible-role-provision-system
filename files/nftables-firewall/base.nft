#!/usr/sbin/nft -f

flush ruleset

table inet firewall {

    # Rate limiting maps for SYN flood protection
    map syn_rate_limit {
        type ipv4_addr : limit
        size 65536
        flags timeout
    }

    # Fallback chain (permissive mode - can be removed for hardening)
    chain nfw_fallback {
        accept comment "Fallback chain - permissive mode"
    }

    # Main input chain
    chain input {
        type filter hook input priority filter; policy drop;

        # ====== TRUSTED INTERFACES ======
        iif lo accept comment "Trust loopback completely"

        # ====== MODERN CONNTRACK HANDLING ======
        # Single source of truth for packet validation
        # Leverages existing sysctl: nf_conntrack_tcp_loose=0, nf_conntrack_max=2000000
        ct state established,related accept comment "Allow established connections"
        ct state invalid drop comment "Drop all invalid packets"

        # ====== ESSENTIAL PRE-CONNTRACK FILTERING ======
        # Only what conntrack can't catch
        ip saddr 127.0.0.0/8 drop comment "Block spoofed loopback"
        ip saddr 224.0.0.0/3 drop comment "Block multicast source addresses"

        # ====== MODERN SYN FLOOD PROTECTION ======
        # Works with existing sysctl: tcp_syncookies=1, tcp_max_syn_backlog=40960
        tcp flags syn update @syn_rate_limit { ip saddr limit rate 20/second burst 10 packets } comment "SYN rate limit per IP"
        tcp flags syn counter drop comment "Drop excessive SYNs"

        # Global SYN rate limiting (works with existing kernel tuning)
        tcp flags syn limit rate 2000/second burst 100 packets accept comment "Global SYN rate limit"
        tcp flags syn counter drop comment "Drop when global limit exceeded"

        # ====== NEW CONNECTION HANDLING ======
        tcp flags syn ct state new accept comment "Allow new connections that passed rate limits"

        # ====== ESSENTIAL SERVICES ======
        # SSH access (customize port as needed)
        tcp dport 22 ct state new accept comment "SSH access"

        # Essential ICMP (rate limited by existing sysctl: icmp_ratelimit=100)
        icmp type { echo-request, destination-unreachable, time-exceeded } limit rate 100/second accept comment "Essential ICMP"
        icmpv6 type { echo-request, destination-unreachable, time-exceeded, nd-neighbor-solicit, nd-neighbor-advert, nd-router-advert } limit rate 100/second accept comment "Essential ICMPv6"

        # ====== FALLBACK CHAIN ======
        jump nfw_fallback comment "Jump to fallback (remove this rule to harden)"

        # ====== LOGGING ======
        limit rate 10/second log prefix "NFT-DROP: " comment "Log dropped packets (rate limited)"
    }

    # Forward chain (for Docker/containers - leverages ip_forward=1 sysctl)
    chain forward {
        type filter hook forward priority filter; policy drop;
        ct state established,related accept comment "Allow established forwarded connections"
        ct state invalid drop comment "Drop invalid forwarded packets"
    }

    # Output chain (usually permissive)
    chain output {
        type filter hook output priority filter; policy accept;
    }
}
